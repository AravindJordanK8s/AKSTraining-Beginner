trigger:
- master

variables:
  imageRepository: 'sampleapp'
  containerRegistry: 'akstraininghexa.azurecr.io'
  imagePullSecret: 'acrsecret'

parameters:
  - name: ImageTag
    type: string
pool:
  vmImage: 'ubuntu-latest'

stages:
# Build Stage 
- stage: Build
  displayName: Build Stage
  jobs:
  - job: Build
    displayName: Build Job
    steps:         
    - bash: echo Files in Source Repository; ls -R $(System.DefaultWorkingDirectory)/PullAndDeploy/Kubernetes_Manifests/SampleDeployment       
    - task: CopyFiles@2
      displayName: Copying files from Source to Artifact Directory
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/PullAndDeploy/Kubernetes_Manifests/SampleDeployment'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        OverWrite: true
    - bash: echo Files in Artifact Staging Directory; ls -R $(Build.ArtifactStagingDirectory)             
    - task: PublishBuildArtifacts@1
      displayName: Publishing Kube Manifest files
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'kube-manifests'
        publishLocation: 'Container'
- stage: Deploy
  displayName: Deploy Stage
  jobs:
  - job: Deploy
    displayName: Deploy to AKS
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: Downloading kube-manifests
      inputs:
        buildType: 'current'
        artifactName: 'kube-manifests'
        targetPath: '$(Pipeline.Workspace)'
    - task: KubernetesManifest@1
      inputs:
        action: 'createSecret'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'akstraining-svc'
        namespace: 'default'
        secretType: 'dockerRegistry'
        secretName: 'acrsecret'
        dockerRegistryEndpoint: 'akstraininghexa-svc'
    - task: KubernetesManifest@1
      displayName: Deploy Kube Manifests to AKS
      inputs:
        action: 'deploy'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'akstraining-svc'
        namespace: 'default'
        manifests: |
          $(Pipeline.Workspace)/Deployment.yaml 
          $(Pipeline.Workspace)/Service.yaml
        imagePullSecrets: $(imagePullSecret)
        containers: |
            $(containerRegistry)/$(imageRepository):${{ parameters.ImageTag }}